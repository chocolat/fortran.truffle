(trigger
    (key [[shift][cmd]D]))

(name [Quick Open])

(only-in source.fortran)

(input selection)

(output tooltip)

(save nothing)

(script [line=$TM_CURRENT_LINE
header=$TM_SELECTED_TEXT

# extract header from current line
if [[ -z "$header" ]] && $(egrep -q <<<"$line" '#(import|include)'); then
   header=$(sed -n <<<"$line" 's/[^<"]*[<"]\([^">]*\).*/\1/p')
fi

# ask user about header
if [[ -z "$header" ]]; then
   res=$(CocoaDialog inputbox --title "Open Header Quickly" --no-newline --informative-text "Header name?"  --text "foobar"  --button1 "Open" --button2 "Cancel")
   [[ $(head -n1 <<<"$res") == "2" ]] && exit
   header=$(tail -n1 <<<"$res")
fi

# If Spotlight is available, avail ourselves of it.
# otherwise, use the old 'find'-based method.
#
# The Spotlight method has the advantage of being
# both reasonably fast and catching all the corner
# cases, many of which are missed by the old method.
#
if [[ `which mdfind` != *"not found" ]]; then
	# we have Spotlight
	files=`ruby "$TM_BUNDLE_SUPPORT/SpotlightSearch.rb" "$header"`
else
	# old method
	arr=("/usr/include"
	"${TM_PROJECT_DIRECTORY:-$TM_DIRECTORY}"
	)

	files=$(for dir in "${arr[@]}";
		do find "$dir" -path "*/$header"; done|sort|uniq)
fi

if [[ -n "$files" ]];
   then IFS=$'\n'; mate $files &>/dev/null &
   else echo "No headers found."
fi
])